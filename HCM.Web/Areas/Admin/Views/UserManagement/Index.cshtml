@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using HCM.Web.Areas.Admin.ViewModels;
@using static HCM.Web.Common.ApplicationConstants;
@model IEnumerable<UserViewModel>

@inject RoleManager<IdentityRole<Guid>> roleManager

@{
	IEnumerable<string?> allRoles = await roleManager.Roles
		.Select(r => r.Name)
		.ToArrayAsync();
}

@{
	ViewData["Title"] = "User Management";
}

<div class="container mt-5">
	@if (TempData["SuccessMessage"] != null)
	{
		<div class="alert alert-success alert-dismissible fade show" role="alert">
			<i class="bi-info-circle me-2"></i>@TempData["SuccessMessage"]
			<button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
		</div>
	}

	<h1 class="text-center mb-4">@ViewData["Title"]</h1>

	@if (User.IsInRole(AdminRoleName))
	{
		<a asp-controller="UserManagement" asp-action="Create" class="btn btn-success mb-2">Create New Employee</a>
	}

	<table class="table table-bordered table-hover">
		<caption>Total users: @Model.Count()</caption>
		<thead>
			<tr>
				<th>Username</th>
				<th>First Name</th>
				<th>Last Name</th>
				<th>Email</th>
				<th>Job Title</th>
				<th>Department</th>
				<th>Salary</th>
				<th>Roles</th>
				<th style="width: 250px;">Actions</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var user in Model)
			{
				<tr>
					<td>@user.Username</td>
					<td>@user.FirstName</td>
					<td>@user.LastName</td>
					<td>@user.Email</td>
					<td>@user.JobTitle</td>
					<td>@user.Department</td>
					<td>@user.Salary BGN</td>
					<td>
						@foreach (var role in user.Roles)
						{
							<span class="badge bg-secondary">@role</span>
						}
					</td>
					<td>
						@if (User.IsInRole(AdminRoleName))
						{
							<form method="post" asp-action="AssignRole" asp-controller="UserManagement" asp-area="Admin" class="d-inline">
								<input type="hidden" name="userId" value="@user.Id" />
								<select name="role" class="form-select form-select-sm d-inline w-auto mt-1">
									@foreach (string? role in allRoles)
									{
										<option value="@role">@role</option>
									}
								</select>
								<button type="submit" class="btn btn-primary btn-sm mb-1">Assign Role</button>
							</form>

							@if (user.Roles.Any())
							{
								<form method="post" asp-action="RemoveRole" asp-controller="UserManagement" asp-area="Admin" class="d-inline ms-2">
									<input type="hidden" name="userId" value="@user.Id" />
									<select name="role" class="form-select form-select-sm d-inline w-auto mt-1">
										@foreach (var role in user.Roles)
										{
											<option value="@role">@role</option>
										}
									</select>
									<button type="submit" class="btn btn-warning btn-sm mb-1">Remove Role</button>
								</form>
							}
						}

						<a asp-action="Edit" asp-route-id="@user.Id" asp-controller="UserManagement" class="btn btn-info btn-sm mb-1 mt-2">
							Edit
						</a>

						@if (User.IsInRole(AdminRoleName))
						{
							<form method="post" asp-action="DeleteUser" asp-controller="UserManagement" asp-area="Admin" class="d-inline ms-2">
								<input type="hidden" name="userId" value="@user.Id" />
								<button type="submit" class="btn btn-danger btn-sm mb-1 mt-2" onclick="return confirm('Are you sure you want to delete this user?');">Delete</button>
							</form>
						}
					</td>
				</tr>
			}
		</tbody>
	</table>
</div>
